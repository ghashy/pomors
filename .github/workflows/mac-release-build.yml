name: mac-release-build

on:
  repository_dispatch:
    types: [manual-build]

jobs:
  dist:
    name: Dist
    env:
      # For some builds, we use cross to test on 32-bit and big-endian
      # systems.
      CARGO: cargo
      # When CARGO is set to CROSS, this is set to `--target matrix.target`.
      # TARGET_FLAGS: 
      # When CARGO is set to CROSS, TARGET_DIR includes matrix.target.
      TARGET_DIR: ./target
      # Emit backtraces on panics.
      RUST_BACKTRACE: 1
    strategy:
      fail-fast: false # don't fail other jobs if one fails
      matrix:
        build: [x86_64-macos] #, x86_64-win-gnu, win32-msvc
        os: [ macos-latest ]
        include:
        - build: aarch64-macos
          os: macos-latest
          rust: stable
          target: aarch64-apple-darwin
          cross: false
          skip_tests: true  # x86_64 host can't run aarch64 code
        - build: x86_64-macos
          os: macos-latest
          rust: stable
          target: x86_64-apple-darwin
          cross: false
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install ${{ matrix.rust }} toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}

      # Install a pre-release version of Cross
      # TODO: We need to pre-install Cross because we need cross-rs/cross#591 to
      #       get a newer C++ compiler toolchain. Remove this step when Cross
      #       0.3.0, which includes cross-rs/cross#591, is released.
      - name: Install Cross
        if: "matrix.cross"
        run: |
          cargo install cross --git https://github.com/cross-rs/cross.git --rev 47df5c76e7cba682823a0b6aa6d95c17b31ba63a
          echo "CARGO=cross" >> $GITHUB_ENV
        # echo "TARGET_FLAGS=--target ${{ matrix.target }}" >> $GITHUB_ENV
        # echo "TARGET_DIR=./target/${{ matrix.target }}" >> $GITHUB_ENV

      - name: Show command used for Cargo
        run: |
          echo "cargo command is: ${{ env.CARGO }}"
          echo "target flag is: ${{ env.TARGET_FLAGS }}"

      - name: Build release binary
        run: ${{ env.CARGO }} build --release --target ${{ matrix.target }}
      
      - name: Upload binaries as artifact
        if: ${{ matrix.target }} == aarch64-apple-darwin
        uses: actions/upload-artifact@v3
        with:
          name: release-darwin-aarch64-apple-darwin
          path: target/aarch64-apple-darwin/release/pomors

      - name: Upload binaries as artifact
        if: ${{ matrix.target }} == x86_64-apple-darwin
        uses: actions/upload-artifact@v3
        with:
          name: release-x86-apple-darwin
          path: target/release/pomors
